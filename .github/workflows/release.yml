name: Release

on:
  workflow_run:
    workflows: ["Run Tests"]
    branches: [main]
    types: 
      - completed


jobs:
  on-success:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - run: echo 'The Run Tests workflow passed'

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max7

      - name: Deploy to server
        if: github.event_name == 'push' && github.ref == 'refs/heads/main
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            IMAGE_TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -n1)
            docker pull $IMAGE_TAG
            docker stop app-container 2>/dev/null || true
            docker rm app-container 2>/dev/null || true
            docker image prune -f
            docker run -d \
              --name app-container \
              -p 3000:3000 \
              --restart unless-stopped \
              -e MARIADB_HOST=${{ secrets.MARIADB_HOST }} \
              -e MARIADB_PORT=${{ secrets.MARIADB_PORT }} \
              -e MARIADB_USER=${{ secrets.MARIADB_USER }} \
              -e MARIADB_ROOT_PASSWORD=${{ secrets.MARIADB_ROOT_PASSWORD }} \
              -e MARIADB_DATABASE=${{ secrets.MARIADB_DATABASE }} \
              -e ADMIN_USER=${{ secrets.ADMIN_USER }} \
              -e ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }} \
              $IMAGE_TAG
